rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Super admin emails - replace with your actual email
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email in [
        'jaqbek.eth@gmail.com'
        // Add your email here
      ];
    }

    // Users can read/write their own user document, super admins can read all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId; // Allow user creation during registration
      allow read: if isSuperAdmin();
      allow write: if isSuperAdmin(); // Super admin can ban/unban users
    }

    // Ambulance access rules
    match /ambulances/{ambulanceId} {
      allow read, write: if request.auth != null &&
        request.auth.uid in resource.data.members;
      allow create: if request.auth != null;
      allow read, write, delete: if isSuperAdmin(); // Super admin can manage all ambulances
    }

    // Inventory items - members can read, admins can write, super admin can do all
    match /ambulances/{ambulanceId}/inventory/{itemId} {
      allow read: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/ambulances/$(ambulanceId)).data.members;
      allow write: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/ambulances/$(ambulanceId)).data.admins;
      allow read, write, delete: if isSuperAdmin();
    }

    // Activity logs - all members can read, system can write, super admin can read all
    match /ambulances/{ambulanceId}/activities/{activityId} {
      allow read: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/ambulances/$(ambulanceId)).data.members;
      allow create: if request.auth != null &&
        request.auth.uid in get(/databases/$(database)/documents/ambulances/$(ambulanceId)).data.members;
      allow read: if isSuperAdmin();
    }
  }
}